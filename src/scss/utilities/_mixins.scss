// ==========================================================================
// Mixins
// ==========================================================================

// Bem Selector Mixins (Element, Modifier)
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}


// Background Images
// -----------------

@mixin bg-image($img, $w, $h, $disp: block) {
  display          : $disp;
  width            : $w;
  height           : $h;
  background-image : url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
}


// Shadow Generator
// ----------------

@mixin shadow($type) {
  $shadow: map-get($shadows, $type);
  @if $shadow {
    box-shadow: $shadow palette(black, x-opaque);
  }
  @else {
    @error "#{$type} is not a valid shadow type. Please review the $shadows var in the config partial for valid types.";
  }
}


// Media Queries
// -------------

@mixin mq($breakpoint, $elm: null) {
  @if $breakpoint == med {
    @media #{$brk-md} {
      @content;
    }
  }
  @else if $breakpoint == lg {
    @media #{$brk-lg} {
      @content;
    }
  }
  @else if $breakpoint == xlg {
    @media #{$brk-xlrg} {
      @content;
    }
  }
  @else if $breakpoint == edge {
    _:-ms-lang(x), _:-webkit-full-screen, & {
      @content;
    }
  }
  @else if $breakpoint == ie11 {
    @media (-ms-high-contrast: none), (-ms-high-contrast: active) {
      @content;
    }
  }
  @else {
    @error "`#{$breakpoint}` is not a valid argument for `mq`.";
  }
}