// ==========================================================================
// Mixins
// ==========================================================================

// Bem Selector Mixins (Element, Modifier)
// ---------------------------------------

@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}


// Background Images
// -----------------

@mixin bg-image($img, $w, $h, $disp: block) {
  display          : $disp;
  width            : $w;
  height           : $h;
  background-image : url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
}


// Shadow Generator
// ----------------

@mixin shadow($type) {
  $shadow: map-get($shadows, $type);
  @if $shadow {
    box-shadow: $shadow palette(black, x-opaque);
  }
  @else {
    @error "#{$type} is not a valid shadow type. Please review the $shadows var in the config partial for valid types.";
  }
}


// Media Queries
// -------------

@mixin mq($breakpoint, $elm: null) {
  @if $breakpoint == med {
    @media #{$brk-md} {
      @content;
    }
  }
  @else if $breakpoint == lg {
    @media #{$brk-lg} {
      @content;
    }
  }
  @else if $breakpoint == xlg {
    @media #{$brk-xlrg} {
      @content;
    }
  }
  @else if $breakpoint == edge {
    _:-ms-lang(x), _:-webkit-full-screen, & {
      @content;
    }
  }
  @else if $breakpoint == ie11 {
    @media (-ms-high-contrast: none), (-ms-high-contrast: active) {
      @content;
    }
  }
  @else {
    @error "`#{$breakpoint}` is not a valid argument for `mq`.";
  }
}


// Animation Generator
// -------------------

@mixin createAnimation($animation, $animation-duration, $numOfElements: 1, $animDelayDivisor: null) {
  & {
    animation: $animation $animation-duration cubic-bezier(0.3, 0, 0.3, 1) forwards;
    // Optional: Stagger animations with multiple elements.
    @if $numOfElements > 1 {
      @for $i from 1 through $numOfElements {
        $offset: $i - 1; // ensure that first element has no delay
        $delay: unquote("#{$offset / $animDelayDivisor}s");
        &:nth-of-type(#{$i}) {
          animation-delay: $delay;
        }
      }
    }
  } 
}


// Pseudo Elements
// ---------------

@mixin pseudo($pos, $w, $h, $bg-size: contain) {
  &::#{$pos} {
    content        : '';
    width          : $w;
    height         : $h;
    background-size: $bg-size;
    // Additional Styles
    @content;
  }
}